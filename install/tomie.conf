map $sent_http_content_type $expires {
	default                    off;
	text/html                  epoch;
	text/css                   max;
	application/javascript     7d;
	~image/                    max;
	font/woff                  max;
}

map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}


# ---------- MAIN SITE ----------

server {
	listen 80;
	server_name inhji.de www.inhji.de;
	return 301 https://$server_name$request_uri;
}

server {
	listen 443 http2 ssl;
	listen [::]:443 http2 ssl;

	server_name inhji.de;

	ssl_certificate /etc/letsencrypt/live/inhji.de/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/inhji.de/privkey.pem;

	ssl_protocols TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_dhparam /etc/nginx/dhparams.pem; # openssl dhparam -out /etc/nginx/dhparams.pem 4096
	ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
	ssl_ecdh_curve secp384r1;
	ssl_session_timeout  10m;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;

	# Will enforce TLS on this site and all subdomains for a year.
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

	# Used to configure the built in reflective XSS protection found in 
	# Internet Explorer, Chrome and Safari (Webkit)
	# mode=block tells the browser to block the response if it detects an attack 
	# rather than sanitising the script.
	add_header X-Xss-Protection "1; mode=block" always;

	# This site cannot be framed, no matter the origin
	add_header X-Frame-Options "deny" always;

	# Prevents  Google Chrome and Internet Explorer from trying to mime-sniff 
	# the content-type of a response away from the one being declared by the server.
	add_header X-Content-Type-Options "nosniff" always;

	# Send the origin, path, and querystring when performing a same-origin request, only send the origin 
	# when the protocol security level stays the same while performing a cross-origin request
	# (HTTPS -> HTTPS), and send no header to any less-secure destinations (HTTPS -> HTTP).
	add_header Referrer-Policy "strict-origin-when-cross-origin";

	add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; style-src 'self'; img-src 'self' data:; media-src 'self'; frame-src 'none'; font-src 'self'; connect-src 'self'";
	add_header X-Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; style-src 'self'; img-src 'self' data:; media-src 'self'; frame-src 'none'; font-src 'self'; connect-src 'self'";
	add_header X-WebKit-CSP "default-src 'self'; script-src 'self'; object-src 'none'; style-src 'self'; img-src 'self' data:; media-src 'self'; frame-src 'none'; font-src 'self'; connect-src 'self'";

	client_max_body_size 10M;
	expires $expires;

	location /uploads {
		alias /opt/tomie/uploads;
	}

	location / {
		proxy_pass http://localhost:10000;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header X-forwarded-host $host;
		proxy_set_header HOST $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_http_version 1.1;
	}

}
